#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
  behaviors {
        rot_kp: sensor_rotate_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };
    };

  sensors {
    compatible = "zmk,keymap-sensors";
    sensors = <&encoder0>;
    triggers-per-rotation = <24>;
  };

  macros {
    //Linux macros

    arch_fan:arch_fan {
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp LG(F)>;
        label = "ARCH_FAN";
    };
    
    arch_print:arch_print{
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp LG(P)>;
        label = "ARCH_PRINT";
    };

    arch_hyprlock:arch_hyprlock{
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp LG(L)>;
        label = "ARCH_hyprlock";
    };

    arch_power_60:arch_power_80{
        compatible = "zmk,behavior-macro";
        #binding-cells = <0>;
        bindings = <&kp LGUI &kp LCTRL &kp LALT &kp 1>;
        label = "ARCH_hyprlock";
    };

        
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer { /*LINUX*/
      bindings = <
        &kp N1    &arch_hyprlock    &kp C_RESET   &kp C_POWER
        &arch_fan    &kp N6     &kp N7    &kp N8
        &kp N9    &kp N0     &kp MINUS &kp EQUAL
        &arch_print &kp C_PREVIOUS &kp C_PLAY_PAUSE &kp C_NEXT
        &to(1)
      >;
        sensor-bindings = <&rot_kp C_VOL_UP C_VOL_DN>;
    };

    layer_1 { /*Windows*/
      bindings = <
        &to(0) &kp C_SLEEP &kp C_RESET &kp C_POWER
        &kp B &kp F &kp J &kp N
        &kp C &kp G &kp K &kp O
        &kp PRINTSCREEN &kp C_PREVIOUS &kp C_PLAY_PAUSE &kp C_NEXT
        &to(2)
      >;
        sensor-bindings = <&rot_kp C_VOL_UP C_VOL_DN>;
      /* encoder-bindings = < &none &none >; */
    };
    layer_2 { /*Numpad*/
      bindings = <
        &kp N7 &kp N8 &kp N9 &kp KP_PLUS
        &kp N4 &kp N5 &kp N6 &kp KP_MINUS
        &kp N1 &kp N2 &kp N3 &kp KP_MULTIPLY
        &kp KP_DIVIDE &kp N0 &kp KP_DOT &kp ENTER
        &to(3)
      >;
        sensor-bindings = <&rot_kp C_VOL_UP C_VOL_DN>;
      /* encoder-bindings = < &none &none >; */
    };

        layer_3 {       /*bt Setting*/
      bindings = <
        &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3
        &none &none &none &none
        &none &to(0) &to(1) &to(2)
        &bt BT_CLR &none &none &none
        &to(0)
      >;
        sensor-bindings = <&rot_kp C_VOL_UP C_VOL_DN>;
      /* encoder-bindings = < &none &none >; */
    };

  };
};
